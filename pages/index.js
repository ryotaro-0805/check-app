import React, { useEffect } from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { useRef, useState } from 'react';
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyDxHJcTFmKE_ksfF-R5euEf0KsNPUNc5vU",
  authDomain: "my-app-70d65.firebaseapp.com",
  projectId: "my-app-70d65",
  storageBucket: "my-app-70d65.appspot.com",
  messagingSenderId: "985935299781",
  appId: "1:985935299781:web:f4e5954729f62c88869cac"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);





export default function Home() {
  
  const [inner,setInner]=useState([]);
  const [switcher,setSwitcher]=useState('none');
  const contentGetter=useRef();

  const clickFnc=(e)=>{
    e.preventDefault();
    setSwitcher('get');
    if (isNaN(contentGetter.current.value)||!contentGetter.current.value){
      setSwitcher('errer');
    contentGetter.current.value='';
    } else {
      setInner((indata)=>[...indata,contentGetter.current.value]);
    }
  }
  useEffect(()=>{
    contentGetter.current.value='';
  },[inner]);
  
  const clear=()=>{
    setInner([]);
    setSwitcher('none');
  }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>my app</h1>
      <p>Input number following box</p>
      <form onSubmit={clickFnc}>
      <input ref={contentGetter} type="numnber" />
      <input onClick={clickFnc} type="submit" value='入力'/>
      </form>
      <button onClick={clear}>Clear</button>
      <button onClick={()=>setInner((indata)=>[...indata,<br />])}>Paragraph</button>
      <hr />
      <h3>-DATA-</h3>
      {switcher==='none' && <p>no-data</p>}
      {(switcher==='get' ||switcher==='errer') && inner.map((indata,index)=><span key={index}>{indata} </span>)}
      {/* {switcher==='errer' && inner.map((indata)=>(indata))} */}
      {switcher==='errer' && <p>This is NaN!! Input the number only!</p>}

    </div>
  )
}
